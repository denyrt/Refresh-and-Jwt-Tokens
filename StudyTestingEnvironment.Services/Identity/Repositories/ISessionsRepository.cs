using StudyTestingEnvironment.Data.Models;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace StudyTestingEnvironment.Services.Identity.Repositories
{
    public interface ISessionsRepository
    {
        /// <summary>
        /// Creates <c>RefreshSession</c> instance and cache it. Session Id is autogenerated.
        /// </summary>
        /// <param name="userId"> User Id. </param>
        /// <param name="refreshSession"> Refresh session sensetive data. </param>
        /// <returns> <c>RefreshSession</c> instance if created else returns <c>null</c>. </returns>
        Task<RefreshSession> CreateSessionAsync(Guid userId, RefreshSession refreshSession);

        Task<RefreshSession> FindSessionAsync(Guid refreshSessionId);

        Task<RefreshSession> FindSessionAsync(Guid userId, Guid refreshSessionId);

        Task<IList<RefreshSession>> GetUserSessions(Guid userId);        

        Task<RefreshSession> UpdateSessionAsync(Guid sessionId, RefreshSession refreshSession);

        Task<KeyValuePair<Guid, RefreshSession>> DeleteSessionAsync(Guid sessionId);

        Task DeleteUserSessions(Guid userId);
    }
}